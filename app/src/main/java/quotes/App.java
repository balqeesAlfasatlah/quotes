/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package quotes;

import com.google.common.reflect.TypeToken;
import com.google.gson.Gson;

import java.io.FileReader;
import java.io.*;
import java.lang.reflect.Type;
import java.net.HttpURLConnection;
import java.net.URL;
import java.util.List;

public class App {

    public String getGreeting() {
        return "Hello World!";
    }

    public static List getQuotes(String path){
        Gson gson = new Gson();
        FileReader fileReader = null;
        try {
            fileReader = new FileReader(path);
        }catch (FileNotFoundException e){
            e.printStackTrace();
            System.out.println("theres an error");
        }
        Type type = new TypeToken<List<Quotes>>(){}.getType();
        List <Quotes> allTheQuates =  gson.fromJson(fileReader, type);
        int randomQuotes = (int)(Math.random() * (allTheQuates.size()));

        System.out.println("Author name: "+ allTheQuates.get(randomQuotes).getAuthor() + "\n" + "quote: " + allTheQuates.get(randomQuotes).getText()
                + "\n" + "Likes: "+ allTheQuates.get(randomQuotes).getLikes());

        return allTheQuates;
    }


    public static String QuotesApi (String api) {

        StringBuilder newLine = new StringBuilder();
        try {

            URL url = new URL(api);
            HttpURLConnection connection = (HttpURLConnection) url.openConnection();
            connection.setRequestMethod("GET");
            connection.setRequestProperty("User-Agent", "Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.11 (KHTML, like Gecko) Chrome/23.0.1271.95 Safari/537.11");

            int status = connection.getResponseCode();
            if(status == 200){
                InputStream inputStream = connection.getInputStream();
                InputStreamReader inputStreamReader = new InputStreamReader(inputStream);
                BufferedReader in = new BufferedReader(inputStreamReader);
                String line = in.readLine();
                newLine = new StringBuilder(line);
                while (line != null) {
                    System.out.println(line);
                    line = in.readLine();
                    if(line != null){
                        newLine.append(line);
                    }
                }
                in.close();
                FileWriter fileWriter = new FileWriter("./app/src/main/resources/newquotes.json");
                fileWriter.write(newLine.toString());
                fileWriter.close();
            }else{
                System.out.println("error " + status);
                getQuotes("./app/src/main/resources/recentquotes.json");
            }
            connection.disconnect();
        } catch (IOException e) {
            e.printStackTrace();
        }
       return newLine.toString();
    }


    public static void main(String[] args) {

         String path = "./app/src/main/resources/recentquotes.json";
         //getQuotes(path);
        String api = "http://api.forismatic.com/api/1.0/?method=getQuote&format=json&lang=en";
        QuotesApi(api);
    }
}
